# syntax=docker/dockerfile:1
# Multi-stage build for smaller final image

# Stage 1: Builder with all compilation tools
FROM python:3.10-bookworm AS builder

ARG DEBIAN_FRONTEND=noninteractive

# Install build dependencies
RUN apt update && apt install -y \
    portaudio19-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements
COPY requirements/server.txt /app/

# Install packages with cache mount
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -U pip && \
    pip install -r /app/server.txt

# Stage 2: Runtime with minimal size
FROM python:3.10-slim-bookworm

ARG DEBIAN_FRONTEND=noninteractive

# Install only runtime dependencies
RUN apt update && apt install -y \
    portaudio19-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set NVIDIA library paths
ENV LD_LIBRARY_PATH="/opt/venv/lib/python3.10/site-packages/nvidia/cublas/lib:/opt/venv/lib/python3.10/site-packages/nvidia/cudnn/lib"

# Create app directory
WORKDIR /app

# Copy application code
COPY whisper_live /app/whisper_live
COPY run_server.py /app/

CMD ["python", "run_server.py"]